{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEVI V\\\\todo-backend\\\\todo-frontend\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  // Fetch todos from backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/todos\").then(res => res.json()).then(data => setTodos(data));\n  }, []);\n\n  // Add new todo\n  const addTodo = () => {\n    if (!text) return; // ignore empty input\n    fetch(\"http://localhost:5000/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    }).then(res => res.json()).then(newTodo => setTodos([...todos, newTodo]));\n    setText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Enter todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, \" - \", todo.completed ? \"✅\" : \"❌\"]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"2DzEVF0KIs1sdGEhlQS0/qrVDF0=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","text","setText","fetch","then","res","json","data","addTodo","method","headers","body","JSON","stringify","newTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","todo","completed","_id","_c","$RefreshReg$"],"sources":["C:/Users/DEVI V/todo-backend/todo-frontend/src/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // Fetch todos from backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then(res => res.json())\r\n      .then(data => setTodos(data));\r\n  }, []);\r\n\r\n  // Add new todo\r\n  const addTodo = () => {\r\n    if (!text) return; // ignore empty input\r\n    fetch(\"http://localhost:5000/todos\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ text })\r\n    })\r\n      .then(res => res.json())\r\n      .then(newTodo => setTodos([...todos, newTodo]));\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Todos</h1>\r\n      <input\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n        placeholder=\"Enter todo\"\r\n      />\r\n      <button onClick={addTodo}>Add</button>\r\n\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <li key={todo._id}>\r\n            {todo.text} - {todo.completed ? \"✅\" : \"❌\"}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACP,IAAI,EAAE,OAAO,CAAC;IACnBE,KAAK,CAAC,6BAA6B,EAAE;MACnCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAK,CAAC;IAC/B,CAAC,CAAC,CACCG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACU,OAAO,IAAId,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEe,OAAO,CAAC,CAAC,CAAC;IACjDZ,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MACEwB,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAEC,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACvCI,WAAW,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFvB,OAAA;MAAQ6B,OAAO,EAAEjB,OAAQ;MAAAO,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtCvB,OAAA;MAAAmB,QAAA,EACGhB,KAAK,CAAC2B,GAAG,CAACC,IAAI,iBACb/B,OAAA;QAAAmB,QAAA,GACGY,IAAI,CAAC1B,IAAI,EAAC,KAAG,EAAC0B,IAAI,CAACC,SAAS,GAAG,GAAG,GAAG,GAAG;MAAA,GADlCD,IAAI,CAACE,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA3CQD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA6ChB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}