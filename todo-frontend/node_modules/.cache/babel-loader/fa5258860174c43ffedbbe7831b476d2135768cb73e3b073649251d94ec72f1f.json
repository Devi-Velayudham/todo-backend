{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEVI V\\\\todo-backend\\\\todo-frontend\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  // Fetch todos from backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/todos\").then(res => res.json()).then(data => setTodos(data));\n  }, []);\n\n  // Add new todo\n  const addTodo = () => {\n    if (!text) return; // ignore empty input\n    fetch(\"http://localhost:5000/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    }).then(res => res.json()).then(newTodo => setTodos([...todos, newTodo]));\n    setText(\"\");\n  };\n  const toggleComplete = (id, completed) => {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        completed\n      })\n    }).then(res => res.json()).then(updatedTodo => {\n      setTodos(todos.map(t => t._id === id ? updatedTodo : t));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Enter todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, \" - \", todo.completed ? \"✅\" : \"❌\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComplete(todo._id, !todo.completed),\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"2DzEVF0KIs1sdGEhlQS0/qrVDF0=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","text","setText","fetch","then","res","json","data","addTodo","method","headers","body","JSON","stringify","newTodo","toggleComplete","id","completed","updatedTodo","map","t","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","todo","deleteTodo","_c","$RefreshReg$"],"sources":["C:/Users/DEVI V/todo-backend/todo-frontend/src/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // Fetch todos from backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then(res => res.json())\r\n      .then(data => setTodos(data));\r\n  }, []);\r\n\r\n  // Add new todo\r\n  const addTodo = () => {\r\n    if (!text) return; // ignore empty input\r\n    fetch(\"http://localhost:5000/todos\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ text })\r\n    })\r\n      .then(res => res.json())\r\n      .then(newTodo => setTodos([...todos, newTodo]));\r\n    setText(\"\");\r\n  };\r\n\r\n  const toggleComplete = (id, completed) => {\r\n    fetch(`http://localhost:5000/todos/${id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ completed })\r\n    })\r\n      .then(res => res.json())\r\n      .then(updatedTodo => {\r\n        setTodos(todos.map(t => (t._id === id ? updatedTodo : t)));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Todos</h1>\r\n      <input\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n        placeholder=\"Enter todo\"\r\n      />\r\n      <button onClick={addTodo}>Add</button>\r\n\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <li key={todo._id}>\r\n            {todo.text} - {todo.completed ? \"✅\" : \"❌\"}\r\n            <button onClick={() => toggleComplete(todo._id, !todo.completed)}>\r\n        Toggle\r\n      </button>\r\n      <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}